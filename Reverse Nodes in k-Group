class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(!head || k == 1) {
            return head;
        }

        ListNode *temp = new ListNode(1);
        temp->next = head;

        ListNode *prev = temp, *current = temp, *next = temp;

        int count = 0, index, i;

        while(current) {
            current = current->next;
            count++;
        }

        while(next) {
            current = prev->next;
            next = current->next;

            index = count > k ? k : 0;

            for(i = 1; i < index; i++) {
                current->next = next->next;
                next->next = prev->next;
                prev->next = next;
                next = current->next;
            }

            prev = current;

            count -= k;
        }

        return temp->next;
    }
};
